##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.6.0.1-B1] date: [Thu Sep 04 10:27:17 MSK 2025] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#   2021-12-22 - Adding Libraries and Depencencies:
#				 * ILI934 api
#				 * DECAWAVE api
#			   - Adding flash command 
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# Libraries and Depencencies
######################################

######################################
## SEGGER RTT Lib
# SEGGER_RTT_LIBDIR := Drivers/Middlewares/SEGGER_RTT
# SEGGER_RTT_ASM := $(wildcard $(SEGGER_RTT_LIBDIR)/RTT/*.s)
# SEGGER_RTT_INC := -I$(SEGGER_RTT_LIBDIR)/Config \
# -I$(SEGGER_RTT_LIBDIR)/Syscalls \
# -I$(SEGGER_RTT_LIBDIR)/RTT 
# SEGGER_RTT_SRC := $(wildcard $(SEGGER_RTT_LIBDIR)/RTT/*.c) \
# $(wildcard $(SEGGER_RTT_LIBDIR)/Syscalls/*.c) 


######################################
## API Path
API_DIR := Drivers/API
API_INC := -I$(API_DIR)
API_SRC := $(wildcard $(API_DIR)/*.c)

######################################
## DECAWAVE
### COMPILER
COMPILER_DECAWAVE_LIBDIR := Drivers/Middlewares/decawave/compiler
COMPILER_DECAWAVE_INC := -I$(COMPILER_DECAWAVE_LIBDIR)
### DRIVER
DRIVER_DECAWAVE_LIBDIR := Drivers/Middlewares/decawave/decadriver
DRIVER_DECAWAVE_INC := -I$(DRIVER_DECAWAVE_LIBDIR)
DRIVER_DECAWAVE_SRC := $(wildcard $(DRIVER_DECAWAVE_LIBDIR)/*.c)
### PLATFORM
PLATFORM_DECAWAVE_LIBDIR := Drivers/Middlewares/decawave/platform
PLATFORM_DECAWAVE_INC := -I$(PLATFORM_DECAWAVE_LIBDIR)
PLATFORM_DECAWAVE_SRC := $(wildcard $(PLATFORM_DECAWAVE_LIBDIR)/*.c)
### EXAMPLES
EXAMPLES_DECAWAVE_LIBDIR := Drivers/Middlewares/decawave/examples
EXAMPLES_DECAWAVE_INC := -I$(EXAMPLES_DECAWAVE_LIBDIR)

######################################
# MIDDLEWARE Integration
## ASM
MIDDLEWARE_ASM := \
# $(SEGGER_RTT_ASM)

## INC
MIDDLEWARE_INC := \
$(ILI9341_INC)\
$(PLATFORM_DECAWAVE_INC)\
$(DRIVER_DECAWAVE_INC)\
$(COMPILER_DECAWAVE_INC)\
$(EXAMPLES_DECAWAVE_INC)\
$(Drivers_INC)\
$(Peripherals_INC)\
$(API_INC)

## SRC
MIDDLEWARE_SRC := \
$(ILI9341_SRC) \
$(DRIVER_DECAWAVE_SRC)\
$(PLATFORM_DECAWAVE_SRC)\
$(Drivers_SRC)\
$(Peripherals_SRC)\
$(API_SRC)

######################################
# target
######################################
TARGET = RTK-DW1000


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/stm32f1xx_it.c \
Core/Src/stm32f1xx_hal_msp.c \
$(MIDDLEWARE_SRC) \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c \
Core/Src/system_stm32f1xx.c \
Core/Src/syscalls.c \
Core/Src/sysmem.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c \
Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_iwdg.c

# ASM sources
ASM_SOURCES =  \
startup_stm32f103xb.s\
$(MIDDLEWARE_ASM)


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F103xB


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32F1xx_HAL_Driver/Inc \
-IDrivers/STM32F1xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32F1xx/Include \
-IDrivers/CMSIS/Include \
-I$(MIDDLEWARE_INC)

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F103XX_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs  -u_printf_float -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections
# ITM flags
# -specs=rdimon.specs -lrdimon -specs=nosys.specs -u_printf_float
# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# flash
#######################################
flash: all
	openocd -f  interface/stlink.cfg -f target/stm32f1x.cfg -c "program ./build/$(TARGET).elf verify reset exit"

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
